{"version":3,"sources":["components/Layout.js","components/NewsFeed.js","redux/Actions.js","App.js","reportWebVitals.js","redux/Reducer.js","redux/Store.js","index.js"],"names":["Layout","props","className","children","href","width","height","src","alt","NewsFeed","rows","useState","isLoading","setLoading","isError","setError","q","setQ","dispatch","useDispatch","url","useSelector","data","article","articles","fetchData","useCallback","params","type","fetchNews","useEffect","a","fetch","response","json","result","htmlFor","onChange","e","changeUrl","target","value","defaultValue","placeholder","JSON","stringify","filter","row","title","toLowerCase","indexOf","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","intialState","reducer","state","action","store","createStore","Reducer","ReactDOM","render","document","getElementById"],"mappings":"kMA4BeA,MAzBf,SAAgBC,GACd,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,4DAEF,sBAAMA,UAAU,WAAhB,SAA4BD,EAAME,WAClC,wBAAQD,UAAU,aAAlB,SACE,qBAAKA,UAAU,QAAf,SAEE,oBAAGE,KAAK,+BAAR,UACE,qBACEC,MAAO,GACPC,OAAQ,GACRC,IAAI,oDACJC,IAAI,KALR,oB,sCCuCKC,EAhDE,WAAO,IAwBJC,EAxBG,EACaC,oBAAS,GADtB,mBACZC,EADY,KACDC,EADC,OAESF,oBAAS,GAFlB,mBAEZG,EAFY,KAEHC,EAFG,OAGDJ,mBAAS,IAHR,mBAGZK,EAHY,KAGTC,EAHS,KAIbC,EAAWC,cACXC,EAAMC,aAAY,SAAAC,GAAI,OAAEA,EAAKF,OAC7BG,EAAUF,aAAY,SAAAC,GAAI,OAAEA,EAAKE,YACjCC,EAAYC,uBAAY,SAAAC,GAAWT,ECNpB,SAACK,GAAD,MAAc,CACnCK,KAAM,UACNN,KAAMC,GDI4CM,CAAUF,MAAU,CAACT,IAoBvE,OAlBAY,qBAAU,YACS,uCAAG,8BAAAC,EAAA,6DACdlB,GAAW,GADG,kBAGamB,MAAM,yBAAD,OAA0BZ,IAH5C,cAGJa,EAHI,gBAIWA,EAASC,OAJpB,OAIJC,EAJI,OAKVV,EAAUU,GALA,kDAOVpB,GAAS,GAPC,QASdF,GAAW,GATG,0DAAH,qDAWfgB,KACF,CAACT,EAAIK,IAMH,qBAAKvB,UAAU,WAAf,SAEQU,EAAa,kDAA8BE,EAAY,qFACtD,qCACF,uBAAOsB,QAAQ,MAAf,8BACC,yBAAQC,SAAU,SAACC,GAAD,OAAOpB,ECrChB,SAACE,GAAD,MAAU,CAC/BQ,KAAM,MACNN,KAAMF,GDmCwCmB,CAAUD,EAAEE,OAAOC,SAASC,aAActB,EAA5E,UACA,wBAAQqB,MAAM,cAAd,qBACA,wBAAQA,MAAM,qBAAd,4BACA,wBAAQA,MAAM,kBAAd,2BACA,wBAAQA,MAAM,WAAd,wBAEQ,uBAAOvC,UAAU,SAAU0B,KAAK,OAAOe,YAAY,wBAAwBN,SAAU,SAACC,GAAD,OAAOrB,EAAKqB,EAAEE,OAAOC,QAAQA,MAAOzB,IAEjI,8BAAM4B,KAAKC,WAjBPnC,EAiBwBa,EAhB7Bb,EAAKoC,QAAO,SAAAC,GAAG,OAAIA,EAAIC,MAAMC,cAAcC,QAAQlC,IAAM,MAgBlB,KAAK,WEhC5CmC,MARf,WACE,OACE,cAAC,EAAD,CAAQH,MAAM,kCAAd,SACE,cAAC,EAAD,OCISI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCPRQ,EAAc,CAChBrC,SAAU,GACVJ,IAAK,eAaO0C,EAVA,WAAkC,IAAjCC,EAAgC,uDAAxBF,EAAaG,EAAW,uCAC7C,OAAOA,EAAOpC,MACV,IAAK,MACD,OAAO,2BAAImC,GAAX,IAAiB3C,IAAI4C,EAAO1C,OAChC,IAAK,UACD,OAAO,2BAAIyC,GAAX,IAAiBvC,SAASwC,EAAO1C,OACrC,QACI,OAAOyC,ICPJE,EAFDC,YAAYC,GCK1BC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.705fba90.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Layout(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1> Praktikum Web Scraping </h1>\r\n      </header>\r\n      <main className=\"App-body\">{props.children}</main>\r\n      <footer className=\"App-footer\">\r\n        <div className=\"links\">\r\n\r\n          <a href=\"https://github.com/akhbarona\">\r\n            <img\r\n              width={24}\r\n              height={24}\r\n              src=\"https://img.icons8.com/metro/26/000000/github.png\"\r\n              alt=\"\"\r\n            ></img>\r\n            Github\r\n          </a>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout","import React, {useState, useEffect, useCallback} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { changeUrl, fetchNews} from '../redux/Actions'\r\nimport '../css/App.css';\r\nconst NewsFeed = () => {\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [isError, setError] = useState(false) \r\n    const [q, setQ] = useState('')\r\n    const dispatch = useDispatch();\r\n    const url = useSelector(data=>data.url)\r\n    const article = useSelector(data=>data.articles)\r\n    const fetchData = useCallback(params => {dispatch(fetchNews(params))},[dispatch])\r\n    \r\n    useEffect(()=>{\r\n        const fetchNews = async () => {\r\n            setLoading(true)\r\n            try {\r\n                const response = await fetch(`http://localhost:3001/${url}`)\r\n                const result = await response.json()\r\n                fetchData(result)\r\n            }catch(error){\r\n                setError(true)\r\n            }\r\n            setLoading(false)\r\n        }\r\n        fetchNews();\r\n    },[url,fetchData]);\r\n    \r\n    function search(rows){\r\n        return rows.filter(row => row.title.toLowerCase().indexOf(q) > -1 )\r\n    }\r\n    return (\r\n        <div className=\"mainMenu\">\r\n            {\r\n                isLoading ? (<p> mohon tunggu... </p>) : ((isError) ? (<p>Mohon maaf ada gangguan, silahkan refresh halaman...</p>) : \r\n                (<>\r\n               <label htmlFor='url'>NewsFeed From : </label>\r\n                <select onChange={(e) => dispatch(changeUrl(e.target.value))} defaultValue={url}>\r\n                <option value='goal.com/id'>Goalcom</option>\r\n                <option value='panditfootball.com'>PanditFootball</option>\r\n                <option value='sport.detik.com'>SportDetikcom</option>\r\n                <option value='bola.com'>Bolacom</option>\r\n                </select>\r\n                        <input className=\"search\"  type='text' placeholder='Ketik judul berita...' onChange={(e) => setQ(e.target.value)} value={q} />\r\n              \r\n                <pre>{JSON.stringify(search(article), null,4)}</pre></>\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default NewsFeed;","export const changeUrl = (url) => ({\r\n    type: 'url',\r\n    data: url\r\n})\r\n\r\nexport const fetchNews = (article) => ({\r\n    type: 'article',\r\n    data: article\r\n})","import React from 'react';\nimport './css/App.css';\nimport Layout from './components/Layout'\nimport NewsFeed from './components/NewsFeed'\n\nfunction App() {\n  return (\n    <Layout title=\"Web Scraping - State Management\">\n      <NewsFeed />\n    </Layout>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const intialState = {\r\n    articles: [],\r\n    url: 'goal.com/id',\r\n}\r\n\r\nconst reducer = (state = intialState, action) => {\r\n    switch(action.type){\r\n        case 'url':\r\n            return {...state,url:action.data};\r\n        case 'article':\r\n            return {...state,articles:action.data}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default  reducer","import { createStore } from 'redux';\r\nimport Reducer from './Reducer';\r\n\r\nconst store = createStore(Reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport store from './redux/Store'\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}